{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsList","useState","sort","sortBy","isReversed","reverseList","renderList","visibleList","a","b","localeCompare","length","reverse","getGoodsList","type","onClick","className","map","good","goodsFromServer","App","isVisible","setVisible","ReactDOM","render","document","getElementById"],"mappings":"yNA+EeA,EAzEoB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpC,EAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KA8BMC,EAvBe,WACnB,IAAIC,EAAW,YAAOP,GAmBtB,OAjBIE,IACFK,EAAc,YAAIA,GAAaL,MAAK,SAACM,EAAGC,GACtC,OAAQP,GACN,IAAK,WACH,OAAOM,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,OAKXP,IACFG,EAAc,YAAIA,GAAaK,WAG1BL,EAGUM,GAEnB,OACE,qCACE,wBACEC,KAAK,SACLC,QAAS,kBAAMV,GAAaD,IAF9B,qBAMA,wBACEU,KAAK,SACLC,QAAS,kBAAMZ,EAAO,aAFxB,iCAMA,wBACEW,KAAK,SACLC,QAAS,kBAAMZ,EAAO,WAFxB,4BAMA,wBACEW,KAAK,SACLC,QAAS,kBAnDbZ,EAAO,SACPE,GAAY,IAgDV,mBAMA,oBAAIW,UAAU,YAAd,SACGV,EAAWW,KAAI,SAAAC,GAAI,OAClB,6BAGGA,GAFIA,YCjEXC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAuBaC,EApBO,WACpB,MAAgCnB,oBAAS,GAAzC,mBAAOoB,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKN,UAAU,MAAf,UACE,uCACCK,EACG,cAAC,EAAD,CAAWrB,UAAWmB,IAEtB,wBACEL,KAAK,SACLC,QAAS,kBAAMO,GAAW,IAF5B,uBCvBVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac31c115.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Props = {\n  goodsList: string[];\n};\n\nconst GoodsList: React.FC<Props> = ({ goodsList }) => {\n  const [sort, sortBy] = useState('');\n  const [isReversed, reverseList] = useState(false);\n\n  const reset = () => {\n    sortBy('');\n    reverseList(false);\n  };\n\n  const getGoodsList = () => {\n    let visibleList = [...goodsList];\n\n    if (sort) {\n      visibleList = [...visibleList].sort((a, b) => {\n        switch (sort) {\n          case 'alphabet':\n            return a.localeCompare(b);\n          case 'length':\n            return a.length - b.length;\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      visibleList = [...visibleList].reverse();\n    }\n\n    return visibleList;\n  };\n\n  const renderList = getGoodsList();\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => reverseList(!isReversed)}\n      >\n        Reverse\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => sortBy('alphabet')}\n      >\n        Sort alphabetically\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => sortBy('length')}\n      >\n        Sort by length\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => reset()}\n      >\n        Reset\n      </button>\n      <ul className=\"goodsList\">\n        {renderList.map(good => (\n          <li\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default GoodsList;\n","import React, { useState } from 'react';\nimport GoodsList from './components/GoodsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setVisible] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {isVisible\n        ? <GoodsList goodsList={goodsFromServer} />\n        : (\n          <button\n            type=\"button\"\n            onClick={() => setVisible(true)}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}